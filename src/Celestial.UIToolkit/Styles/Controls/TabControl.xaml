<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:c="http://celestial-ui.com"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:controls="clr-namespace:Celestial.UIToolkit.Controls">

    <ResourceDictionary.MergedDictionaries>
        <c:SharedResourceDictionary Source="../Shared/Theming.xaml" />
        <c:SharedResourceDictionary Source="../Shared/FocusVisuals.xaml" />
        <c:SharedResourceDictionary Source="../Shared/TemplateParts.xaml" />
        <c:SharedResourceDictionary Source="./TextBlock.xaml" />

        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Themes/Light.xaml" />
        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Accents/Default.xaml" />
        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Globals.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- The TabItem's "default" Font-Properties get shared between the Title and the Content
         which gets displayed as the TabPage.
         This means that the Header's Font-Properties also get applied to the content, which
         we don't want to happen.
         Hence we have custom TabItemProperties which are used for styling the header.
         
         The TabItem Style also animates the Foreground property of these TemplateProperties, not the
         TabItem.Foreground property. -->
    <Style x:Key="StandardTabItemHeader" TargetType="TabItem">
        <Setter Property="theming:TabItemProperties.HeaderForeground" Value="{StaticResource StandardForegroundBrush}" />
        <Setter Property="theming:TabItemProperties.HeaderFontSize" Value="{StaticResource TitleFontSize}" />
        <Setter Property="theming:TabItemProperties.HeaderFontFamily" Value="{StaticResource TitleFontFamily}" />
        <Setter Property="theming:TabItemProperties.HeaderFontStyle" Value="{StaticResource TitleFontStyle}" />
        <Setter Property="theming:TabItemProperties.HeaderFontWeight" Value="{StaticResource TitleFontWeight}" />
        <Setter Property="theming:TabItemProperties.HeaderFontStretch" Value="{StaticResource TitleFontStretch}" />
    </Style>

    
    
    <Style x:Key="StandardTabItem" TargetType="TabItem" BasedOn="{c:MultiStyle 'StandardTabItemHeader TransparentBackground TransparentBorder StandardForeground StandardFontProperties ElevationZIndex Shadow0'}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RectangleFocusVisual}" />
        <Setter Property="Padding" Value="{c:GridUnit '2,0,2,1'}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="theming:ControlProperties.CornerRadius" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=TabControl}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=TabControl}}" />
        <Setter Property="controls:ThemeShadow.Shadow" Value="{StaticResource AmbientControlThemeShadow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <ControlTemplate.Resources>
                        <c:ThicknessSidePickerConverter x:Key="LeftRightPicker" Top="0" Bottom="0" />
                    </ControlTemplate.Resources>
                    
                    <Grid VisualStateManager.CustomVisualStateManager="{x:Static c:ExtendedVisualStateManager.Default}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          Margin="{c:GridUnit '-2,0,0,0'}">
                        <controls:ThemeShadowPresenter>
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}" />
                        </controls:ThemeShadowPresenter>
                        <Border x:Name="BorderSpacer"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentControl x:Name="HeaderContentSite"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            Foreground="{TemplateBinding theming:TabItemProperties.HeaderForeground}"
                                            FontSize="{TemplateBinding theming:TabItemProperties.HeaderFontSize}"
                                            FontFamily="{TemplateBinding theming:TabItemProperties.HeaderFontFamily}"
                                            FontStyle="{TemplateBinding theming:TabItemProperties.HeaderFontStyle}"
                                            FontWeight="{TemplateBinding theming:TabItemProperties.HeaderFontWeight}"
                                            FontStretch="{TemplateBinding theming:TabItemProperties.HeaderFontStretch}"
                                            Focusable="False" />
                        </Border>

                        <controls:SelectionIndicator x:Name="SelectionIndicator"
                                                     Height="{c:GridUnit 0.5}"
                                                     VerticalAlignment="Bottom"
                                                     Background="{TemplateBinding theming:ActiveProperties.ForegroundBrush}"
                                                     IsSelected="{TemplateBinding IsSelected}"
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                     Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftRightPicker}}"/>

                        <Grid.Resources>
                            <Storyboard x:Key="MouseOverStoryboard">
                                <c:BrushAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                  Storyboard.TargetProperty="(theming:TabItemProperties.HeaderForeground)"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                               Storyboard.TargetProperty="(controls:ThemeShadow.Elevation)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.ShadowElevation), RelativeSource={RelativeSource TemplatedParent}}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="DisabledStoryboard">
                                <c:BrushAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:BrushAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                  Storyboard.TargetProperty="(theming:TabItemProperties.HeaderForeground)"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:DisabledProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:DisabledProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                               Storyboard.TargetProperty="(controls:ThemeShadow.Elevation)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding Path=(theming:DisabledProperties.ShadowElevation), RelativeSource={RelativeSource TemplatedParent}}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}"
                                                      GeneratedEasingFunction="{StaticResource ColorAnimationEase}" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                    <VisualTransition From="Disabled" GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>

                                <c:ExtendedVisualState x:Name="Normal" />
                                <c:ExtendedVisualState x:Name="Disabled" Storyboard="{StaticResource DisabledStoryboard}" />
                                
                                <!-- Since the default TabControl unloads a TabItem when it isn't selected, the Bindings to
                                     the theming: Properties will always fail.
                                     This means that we cannot implement a "Selected" Visual State, since the animations will
                                     have to animate from 'null'.
                                     We need to trick around this by setting the Selected-State-Properties via a Trigger (see below).
                                
                                     By declaring an empty "Selected" Visual State, the VSM animates the "MouseOver"
                                     visual state "back" to the fixed Selected properties. -> There is still an animation to Selected.
                                
                                     We can also use the ExtendedVisualState's Conditions to deny the MouseOver State 
                                     when a TabItem is selected. -->
                                <c:ExtendedVisualState x:Name="Selected" />
                                <c:ExtendedVisualState x:Name="MouseOver" Storyboard="{StaticResource MouseOverStoryboard}">
                                    <c:ExtendedVisualState.Conditions>
                                        <Condition Property="IsSelected" Value="False" />
                                    </c:ExtendedVisualState.Conditions>
                                </c:ExtendedVisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding Path=(theming:ActiveProperties.BackgroundBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=(theming:ActiveProperties.BorderBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter Property="theming:TabItemProperties.HeaderForeground" Value="{Binding Path=(theming:ActiveProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
                            <Setter Property="controls:ThemeShadow.Elevation" Value="{Binding Path=(theming:ActiveProperties.ShadowElevation), RelativeSource={RelativeSource Self}}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="SelectionIndicator" Property="Background" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Accent1TabItem" TargetType="TabItem" BasedOn="{c:MultiStyle 'StandardTabItem StandardForegroundAccent1States'}" />
    <Style x:Key="Accent2TabItem" TargetType="TabItem" BasedOn="{c:MultiStyle 'StandardTabItem StandardForegroundAccent2States'}" />

    <Style TargetType="TabItem" BasedOn="{StaticResource Accent2TabItem}" />

    <Style x:Key="StandardTabControl" TargetType="TabControl" BasedOn="{c:MultiStyle 'TransparentBackground TransparentBorder StandardForeground StandardFontProperties Shadow0'}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
        <Setter Property="theming:ControlProperties.CornerRadius" Value="0" />
        <Setter Property="controls:ThemeShadow.Shadow" Value="{StaticResource DisabledThemeShadow}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource StandardTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid VisualStateManager.CustomVisualStateManager="{x:Static c:ExtendedVisualStateManager.Default}">
                        <DockPanel>
                            <TabPanel x:Name="HeaderPanel"
                                      DockPanel.Dock="Top"
                                      Background="Transparent"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1"
                                      Panel.ZIndex="1" />

                            <Border x:Name="Bd"
                                    SnapsToDevicePixels="False"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}"
                                    Padding="{TemplateBinding Padding}"
                                    KeyboardNavigation.TabNavigation="Contained"
                                    KeyboardNavigation.DirectionalNavigation="Local"
                                    KeyboardNavigation.TabIndex="2">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  ContentSource="SelectedContent"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                        
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Bottom" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Accent1TabControl" TargetType="TabControl" BasedOn="{StaticResource StandardTabControl}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource Accent1TabItem}" />
    </Style>
    
    <Style x:Key="Accent2TabControl" TargetType="TabControl" BasedOn="{StaticResource StandardTabControl}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource Accent2TabItem}" />
    </Style>
    
    <Style TargetType="TabControl" BasedOn="{StaticResource Accent2TabControl}" />

</ResourceDictionary>