<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="http://celestial-ui.com"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <c:SharedResourceDictionary Source="../Shared/Theming.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--<Style x:Key="StandardTabControl" TargetType="TabControl" BasedOn="{StaticResource Accent2BorderWithForegroundThemingBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource StandardFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource StandardFontWeight}" />
        <Setter Property="FontStretch" Value="{StaticResource StandardFontStretch}" />
        <Setter Property="FontStyle" Value="{StaticResource StandardFontStyle}" />
        <Setter Property="Padding" Value="{c:GridUnit '1,0'}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <DockPanel KeyboardNavigation.TabNavigation="Local"
                               Background="Transparent">
                        <TabPanel x:Name="HeaderPanel"
                                  DockPanel.Dock="Top"
                                  Margin="{TemplateBinding Padding}"
                                  Panel.ZIndex="1"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Background="Transparent" />
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Grid.Row="1"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TabControl" BasedOn="{StaticResource StandardTabControl}" />

    <Style x:Key="StandardTabItem" TargetType="TabItem" BasedOn="{StaticResource Accent2BorderWithForegroundThemingBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource TitleFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource TitleFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource TitleFontWeight}" />
        <Setter Property="FontStretch" Value="{StaticResource TitleFontStretch}" />
        <Setter Property="FontStyle" Value="{StaticResource TitleFontStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="theming:TabControlProperties.SelectedMarkHeight" Value="3" />
        <Setter Property="theming:TabControlProperties.SelectedMarkMargin" Value="0,3,0,3" />
        <Setter Property="theming:ControlProperties.CornerRadius" Value="0" />
        <Setter Property="theming:MouseOverProperties.BackgroundBrush" Value="Transparent" />
        <Setter Property="theming:MouseOverProperties.BorderBrush" Value="{StaticResource Accent2LightBrush}" />
        <Setter Property="theming:MouseOverProperties.ForegroundBrush" Value="{StaticResource Accent2LightBrush}" />
        <Setter Property="theming:ActiveProperties.BackgroundBrush" Value="Transparent" />
        <Setter Property="theming:ActiveProperties.BorderBrush" Value="{StaticResource Accent2Brush}" />
        <Setter Property="theming:ActiveProperties.ForegroundBrush" Value="{StaticResource Accent2Brush}" />
        <Setter Property="theming:DisabledProperties.BackgroundBrush" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.Resources>
                            <c:BindingProxy x:Key="ActiveBackgroundBrushProxy"
                                                Data="{Binding Path=(theming:ActiveProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <c:BindingProxy x:Key="ActiveBorderBrushProxy"
                                                Data="{Binding Path=(theming:ActiveProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />

                            <c:BindingProxy x:Key="MouseOverBackgroundBrushProxy"
                                                Data="{Binding Path=(theming:MouseOverProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <c:BindingProxy x:Key="MouseOverBorderBrushProxy"
                                                Data="{Binding Path=(theming:MouseOverProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />

                            <c:BindingProxy x:Key="DisabledBackgroundBrushProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <c:BindingProxy x:Key="DisabledBorderBrushProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid.Resources>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}" />
                        <Border x:Name="SelectedBorder"
                                Background="{Binding Path=(theming:ActiveProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{Binding Path=(theming:ActiveProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}"
                                Visibility="Collapsed" />
                        <DockPanel HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   UseLayoutRounding="True"
                                   Margin="{TemplateBinding Padding}">
                            <Border x:Name="SelectedMark"
                                    DockPanel.Dock="Bottom"
                                    Height="{TemplateBinding theming:TabControlProperties.SelectedMarkHeight}"
                                    Margin="{TemplateBinding theming:TabControlProperties.SelectedMarkMargin}"
                                    VerticalAlignment="Stretch"
                                    RenderTransformOrigin="0.5,0.5"
                                    Background="{Binding Path=(theming:ActiveProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="SelectedMarkScaleTransform" 
                                                    ScaleX="0" />
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              RecognizesAccessKey="True" />
                        </DockPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBackgroundBrushProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        --><!-- Remove the mouse-over animation for the SelectedBorder and SelectedMark by design.
                                             That's because it gets triggered, even if the user is hovering a child element in the 
                                             TabControl itself, and not the TabItem (header), which is not intended to trigger animations. -->
                                        <!--ColorAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBackgroundBrushProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="SelectedMark"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBorderBrushProxy}}" />
                                        </ColorAnimationUsingKeyFrames>--><!--
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBackgroundBrushProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBackgroundBrushProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="SelectedMark"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBorderBrushProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedMarkScaleTransform"
                                                                       Storyboard.TargetProperty="ScaleX">
                                            <SplineDoubleKeyFrame KeyTime="{StaticResource ExitAnimationKeyTime}" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedMarkScaleTransform"
                                                                       Storyboard.TargetProperty="ScaleX">
                                            <SplineDoubleKeyFrame KeyTime="{StaticResource ExitAnimationKeyTime}" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Bottom">
                            <Setter TargetName="SelectedMark" Property="DockPanel.Dock" Value="Top" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            --><!-- I would love to do this via animations, but that's not supported due to
                 the Foreground being frozen, sadly.. --><!--
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:ActiveProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TabItem" BasedOn="{StaticResource StandardTabItem}" />-->

</ResourceDictionary>