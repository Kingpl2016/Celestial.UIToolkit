<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="http://celestial-ui.com"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:controls="clr-namespace:Celestial.UIToolkit.Controls">

    <ResourceDictionary.MergedDictionaries>
        <c:SharedResourceDictionary Source="../Shared/Theming.xaml" />
        <c:SharedResourceDictionary Source="../Shared/FocusVisuals.xaml" />
        <c:SharedResourceDictionary Source="../Shared/TemplateParts.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!-- Use TargetType="Control", so that the PasswordBox can use the style too.
         Slightly problematic, since this allows setting this style on any type of control. -->
    <Style x:Key="StandardTextBox" TargetType="Control" BasedOn="{c:MultiStyle 'PrimaryBackground ControlBorderAccent2States StandardForeground StandardFontProperties Shadow0'}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="{c:GridUnit '1,0'}" />
        <Setter Property="MinWidth" Value="{c:GridUnit 30}" />
        <Setter Property="MinHeight" Value="{c:GridUnit 7}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{StaticResource StandardCornerRadius}" />
        <Setter Property="PasswordBox.PasswordChar" Value="&#x2022;" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="controls:ThemeShadow.Shadow" Value="{StaticResource BottomControlThemeShadow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid VisualStateManager.CustomVisualStateManager="{x:Static c:ExtendedVisualStateManager.Default}">
                        <Grid.Resources>

                            <Storyboard x:Key="MouseOverStoryboard">
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="DisabledStoryboard">
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:DisabledProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:DisabledProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="FocusedBorder"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:DisabledProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="FocusedBorder"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:DisabledProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusedIndicator"
                                                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="FocusedStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedBorder"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusedIndicator"
                                                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>

                        <controls:ThemeShadowPresenter>
                            <Grid>
                                <Border x:Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding Path=(theming:ControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                <Border x:Name="FocusedBorder"
                                        Background="{TemplateBinding theming:ActiveProperties.BackgroundBrush}"
                                        BorderBrush="{TemplateBinding theming:ActiveProperties.BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding Path=(theming:ControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        Visibility="Collapsed" />
                                <Border BorderThickness="{TemplateBinding BorderThickness}">
                                    <Rectangle x:Name="FocusedIndicator"
                                               Fill="{TemplateBinding theming:ActiveProperties.BorderBrush}"
                                               RenderTransformOrigin="0.5,0.5"
                                               Height="1"
                                               VerticalAlignment="Bottom">
                                        <Rectangle.RenderTransform>
                                            <ScaleTransform ScaleX="0" />
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Border>
                            </Grid>
                        </controls:ThemeShadowPresenter>

                        <ScrollViewer x:Name="PART_ContentHost"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                    <VisualTransition To="ReadOnly" GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" Storyboard="{StaticResource MouseOverStoryboard}" />
                                <VisualState x:Name="Disabled" Storyboard="{StaticResource DisabledStoryboard}" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" Storyboard="{StaticResource FocusedStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TextBoxBase.IsReadOnly" Value="True">
                            <Setter Property="theming:ActiveProperties.BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ErrorControlBorderBrush}" />
                            <Setter Property="theming:MouseOverProperties.BorderBrush" Value="{StaticResource ErrorControlHoverBorderBrush}" />
                            <Setter Property="theming:ActiveProperties.BorderBrush" Value="{StaticResource ErrorControlActiveBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource StandardTextBox}" />
    <Style TargetType="RichTextBox" BasedOn="{StaticResource StandardTextBox}" />
    <Style TargetType="PasswordBox" BasedOn="{StaticResource StandardTextBox}" />

</ResourceDictionary>