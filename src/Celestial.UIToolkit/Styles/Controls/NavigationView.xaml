<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:c="http://celestial-ui.com"
                    xmlns:controls="clr-namespace:Celestial.UIToolkit.Controls"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming">

    <ResourceDictionary.MergedDictionaries>
        <c:SharedResourceDictionary Source="./Button.xaml" />
        <c:SharedResourceDictionary Source="../Shared/Theming.xaml" />
        <c:SharedResourceDictionary Source="../Shared/FocusVisuals.xaml" />
        <c:SharedResourceDictionary Source="../Shared/TemplateParts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="StandardNavigationViewItem" TargetType="controls:NavigationViewItem" BasedOn="{c:MultiStyle 'OnPaneControlBackground OnPaneControlBorder StandardForeground StandardFontProperties'}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RectangleFocusVisual}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="theming:ActiveProperties.ForegroundBrush" Value="{StaticResource Accent2Brush}" />
        <Setter Property="Padding" Value="{c:GridUnit '0,2'}" />
        <Setter Property="MinHeight" Value="{c:GridUnit 10}" />
        <Setter Property="controls:IconElement.Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:NavigationViewItem">
                    <Grid VisualStateManager.CustomVisualStateManager="{x:Static c:ExtendedVisualStateManager.Default}"
                          Background="Transparent">
                        <Grid.Resources>
                            <c:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

                            <Storyboard x:Key="MouseOverStoryboard">
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="SelectionBorder"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="SelectionBorder"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{Binding Path=(theming:MouseOverProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="SelectionIndicator"
                                                                Storyboard.TargetProperty="Fill">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{StaticResource Accent2ControlHoverBackgroundBrush}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            </Storyboard>

                            <Storyboard x:Key="DisabledStoryboard">
                                <c:BrushAnimation Storyboard.TargetName="Bd"
                                                  Storyboard.TargetProperty="Background"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:DisabledProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:BrushAnimation Storyboard.TargetName="Bd"
                                                  Storyboard.TargetProperty="BorderBrush"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:DisabledProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:BrushAnimation Storyboard.TargetName="SelectionBorder"
                                                  Storyboard.TargetProperty="Background"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:DisabledProperties.BackgroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:BrushAnimation Storyboard.TargetName="SelectionBorder"
                                                  Storyboard.TargetProperty="BorderBrush"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:DisabledProperties.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:BrushAnimation Storyboard.TargetName="SelectionIndicator"
                                                  Storyboard.TargetProperty="Fill"
                                                  Duration="0"
                                                  To="{StaticResource ControlDisabledBackgroundBrush}" />
                                <c:BrushAnimation Storyboard.Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            </Storyboard>

                            <Storyboard x:Key="SelectedStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionBorder"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionIndicator"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="SelectedUnfocusedStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionBorder"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionIndicator"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                            <DataTemplate DataType="{x:Type sys:String}">
                                <TextBlock Style="{StaticResource TextBlockOverrideStyle}"  />
                            </DataTemplate>
                        </Grid.Resources>

                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="SelectionBorder"
                                Background="{TemplateBinding theming:ActiveProperties.BackgroundBrush}"
                                BorderBrush="{TemplateBinding theming:ActiveProperties.BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Visibility="Collapsed" />
                        <controls:ClippingBorder>
                            <controls:RippleOverlay x:Name="Ripple"
                                                    IsEnabled="{TemplateBinding theming:RippleProperties.ShowRippleAnimation}"
                                                    Background="{TemplateBinding theming:ActiveProperties.BackgroundBrush}"
                                                    BorderBrush="{TemplateBinding theming:ActiveProperties.BorderBrush}" 
                                                    IsActiveTrigger="{TemplateBinding IsSelected}" />
                        </controls:ClippingBorder>
                        
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="IconContainer"
                                    Width="{Binding CompactPaneLength, RelativeSource={RelativeSource AncestorType=c:NavigationView}}"
                                    Visibility="{Binding HasIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <ContentPresenter x:Name="IconContentSite"
                                                  Content="{TemplateBinding Icon}"
                                                  ContentTemplate="{TemplateBinding IconTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding IconTemplateSelector}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                            <ContentPresenter x:Name="ContentSite"
                                              Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{c:GridUnit '3,0,0,0'}"
                                              RecognizesAccessKey="True" />
                        </Grid>

                        <Rectangle x:Name="SelectionIndicator"
                                    Width="{c:GridUnit 1}"
                                    HorizontalAlignment="Left"
                                    Fill="{StaticResource Accent2ControlBackgroundBrush}"
                                    Visibility="Collapsed" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" Storyboard="{StaticResource MouseOverStoryboard}" />
                                <VisualState x:Name="Disabled" Storyboard="{StaticResource DisabledStoryboard}" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" Storyboard="{StaticResource SelectedStoryboard}" />
                                <VisualState x:Name="SelectedUnfocused" Storyboard="{StaticResource SelectedUnfocusedStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:NavigationViewItem" BasedOn="{StaticResource StandardNavigationViewItem}" />

    <Style x:Key="NavigationViewPaneButton" TargetType="Button" BasedOn="{c:MultiStyle 'StandardButton OnPaneControlBackground OnPaneControlBorder'}">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
    </Style>

    <Style x:Key="NavigationViewBackButton" TargetType="Button" BasedOn="{StaticResource NavigationViewPaneButton}">
        
    </Style>

    <Style x:Key="NavigationViewToggleButton" TargetType="Button" BasedOn="{StaticResource NavigationViewPaneButton}">
        
    </Style>

    <Style x:Key="NavigationViewMenuItemsListView" TargetType="ListView">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <ScrollViewer>
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="controls:NavigationView">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="CompactPaneLength" Value="{c:GridUnit 12}" />
        <Setter Property="OpenPaneLength" Value="{c:GridUnit 80}" />
        <Setter Property="PaneBackButtonStyle" Value="{StaticResource NavigationViewBackButton}" />
        <Setter Property="PaneToggleButtonStyle" Value="{StaticResource NavigationViewToggleButton}" />
        <Setter Property="PaneBackground" Value="{StaticResource PaneBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:NavigationView">
                    <Grid VisualStateManager.CustomVisualStateManager="{x:Static c:ExtendedVisualStateManager.Default}"
                          Background="Transparent">
                        <Grid.Resources>
                            <c:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                        </Grid.Resources>

                        <Grid>
                            <controls:SplitView x:Name="SplitView"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                PaneBackground="{TemplateBinding PaneBackground}"
                                                theming:ControlProperties.CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}"
                                                DisplayMode="Overlay"
                                                CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                                OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                                IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}">
                                <controls:SplitView.Pane>
                                    <Grid x:Name="PART_PaneContentContainer">
                                        <Grid.RowDefinitions>
                                            <RowDefinition x:Name="BackButtonRow"   Height="Auto" />
                                            <RowDefinition x:Name="ToggleButtonRow" Height="Auto" />
                                            <RowDefinition x:Name="MenuItemsRow"    Height="*" />
                                            <RowDefinition x:Name="FooterRow"       Height="Auto" />
                                        </Grid.RowDefinitions>
                                        
                                        <Button x:Name="PART_BackButton"
                                                Style="{TemplateBinding PaneBackButtonStyle}"
                                                IsEnabled="{TemplateBinding IsBackButtonEnabled}"
                                                Visibility="{Binding IsBackButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                HorizontalAlignment="Left"
                                                Width="{TemplateBinding CompactPaneLength}"
                                                Height="{TemplateBinding CompactPaneLength}"
                                                Command="{TemplateBinding BackButtonCommand}"
                                                CommandParameter="{TemplateBinding BackButtonCommandParameter}">
                                            &lt;
                                        </Button>

                                        <Grid Grid.Row="1">
                                            <Grid.Resources>
                                                <!-- This DataTemplate will be used by the PaneTitle-ContentPresenter below.
                                                     By declaring it here, it will only affect String resources and 
                                                     can still be overwritten by the 'PaneHeaderTemplate' property. -->
                                                <DataTemplate DataType="{x:Type sys:String}">
                                                    <TextBlock Style="{DynamicResource TitleTextBlock}"
                                                               Text="{Binding}"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               TextTrimming="CharacterEllipsis"
                                                               Padding="{c:GridUnit '3,0'}" />
                                                </DataTemplate>
                                            </Grid.Resources>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="PART_ToggleButton"
                                                    Style="{TemplateBinding PaneToggleButtonStyle}"
                                                    IsEnabled="{TemplateBinding IsToggleButtonEnabled}"
                                                    Visibility="{Binding IsToggleButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    HorizontalAlignment="Left"
                                                    Width="{TemplateBinding CompactPaneLength}"
                                                    Height="{TemplateBinding CompactPaneLength}">
                                                =
                                            </Button>
                                            <ContentPresenter x:Name="PaneHeaderContentSite"
                                                              Grid.Column="1"
                                                              ContentSource="PaneHeader"
                                                              ContentTemplate="{TemplateBinding PaneHeaderTemplate}"
                                                              ContentTemplateSelector="{TemplateBinding PaneHeaderTemplateSelector}"
                                                              ContentStringFormat="{TemplateBinding PaneHeaderStringFormat}"
                                                              Visibility="{Binding HasPaneTitle, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        </Grid>

                                        <ListView Grid.Row="2"
                                                  Style="{StaticResource NavigationViewMenuItemsListView}"
                                                  Margin="{c:GridUnit '0,3'}"
                                                  SelectionMode="Single"
                                                  ItemsSource="{Binding MenuItems, RelativeSource={RelativeSource TemplatedParent}}"
                                                  SelectedItem="{Binding SelectedMenuItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                  ItemTemplate="{TemplateBinding MenuItemTemplate}"
                                                  ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}"
                                                  ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}"
                                                  ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}" />

                                        <ContentPresenter x:Name="PaneFooterContentSite" 
                                                          Grid.Row="3"
                                                          ContentSource="PaneFooter"
                                                          ContentTemplate="{TemplateBinding PaneFooterTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding PaneFooterTemplateSelector}"
                                                          ContentStringFormat="{TemplateBinding PaneFooterStringFormat}" />
                                    </Grid>
                                </controls:SplitView.Pane>

                                <Grid x:Name="ContentGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Grid x:Name="HeaderContainer">
                                        <Grid.Resources>
                                            <DataTemplate DataType="{x:Type sys:String}">
                                                <!-- By default (and assuming that the Header is a string), the Header has a
                                                     fixed height. Align it with the CompactPaneLength, so that everything looks
                                                     symmetrical. -->
                                                <Grid Height="{Binding CompactPaneLength, RelativeSource={RelativeSource AncestorType={x:Type controls:NavigationView}}}">
                                                    <TextBlock Style="{DynamicResource TitleTextBlock}"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               Padding="{c:GridUnit '3,0'}"
                                                               TextTrimming="CharacterEllipsis"
                                                               Text="{Binding}" />
                                                </Grid>
                                            </DataTemplate>
                                        </Grid.Resources>
                                        <ContentPresenter x:Name="HeaderContentSite"
                                                          ContentSource="Header"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          Visibility="{Binding AlwaysShowHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </Grid>
                                    <ContentPresenter x:Name="ContentSite"
                                                      Grid.Row="1"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </controls:SplitView>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <c:ExtendedVisualState x:Name="Minimal" />
                                <c:ExtendedVisualState x:Name="Compact" />
                                <c:ExtendedVisualState x:Name="Expanded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayMode" Value="Compact">
                            <Setter TargetName="SplitView" Property="DisplayMode" Value="CompactOverlay" />
                        </Trigger>
                        <Trigger Property="DisplayMode" Value="Expanded">
                            <Setter TargetName="SplitView" Property="DisplayMode" Value="CompactInline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>