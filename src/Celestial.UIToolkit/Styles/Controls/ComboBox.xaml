<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Celestial.UIToolkit"
                    xmlns:converters="clr-namespace:Celestial.UIToolkit.Converters"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <local:SharedResourceDictionary Source="../Shared/Theming.xaml" />
        <local:SharedResourceDictionary Source="../../Icons/Arrows.xaml" />
        <local:SharedResourceDictionary Source="Popup.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="StandardComboBox" TargetType="ComboBox" BasedOn="{StaticResource DefaultThemingBase}">
        <Style.Resources>
            <!-- This custom style is for the Down-Arrow in the ComboBox.
                 It is fully animated, like a normal Button. -->
            <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource DefaultThemingBase}">
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="ClickMode" Value="Press" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="BorderBrush" Value="{StaticResource StandardControlBorderBrush}" />
                <Setter Property="theming:MouseOverProperties.BorderColor" Value="{StaticResource Accent2HighColor}" />
                <Setter Property="theming:PressedProperties.BorderColor" Value="{StaticResource Accent2LowColor}" />
                <Setter Property="theming:ActiveProperties.BorderColor" Value="{StaticResource Accent2MediumColor}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Background="Transparent">
                                <Grid.Resources>
                                    <local:BindingProxy x:Key="ActiveBorderColorProxy"
                                                        Data="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="MouseOverBorderColorProxy"
                                                        Data="{Binding Path=(theming:MouseOverProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="PressedBorderColorProxy"
                                                        Data="{Binding Path=(theming:PressedProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="DisabledBorderColorProxy"
                                                        Data="{Binding Path=(theming:DisabledProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="26" />
                                </Grid.ColumnDefinitions>
                                <Path x:Name="Arrow"
                                      Data="{StaticResource HalfArrowDown}"
                                      Grid.Column="1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="{TemplateBinding BorderBrush}">
                                    <Path.LayoutTransform>
                                        <RotateTransform x:Name="ArrowRotateTransform" 
                                                         Angle="0" CenterX="0.5" CenterY="0.5" />
                                    </Path.LayoutTransform>
                                </Path>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                            <VisualTransition To="Disabled" GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource PressedBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArrowRotateTransform"
                                                                               Storyboard.TargetProperty="Angle">
                                                    <LinearDoubleKeyFrame KeyTime="{StaticResource InnerPartialAnimationKeyTime}" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArrowRotateTransform"
                                                                               Storyboard.TargetProperty="Angle">
                                                    <LinearDoubleKeyFrame KeyTime="{StaticResource InnerPartialAnimationKeyTime}" Value="180" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="BorderBrush" Value="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:ColorToSolidColorBrushConverter.Default}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Since the ComboBox renders its own border, we only need
                 the "raw" input functionality of a TextBox. -->
            <Style x:Key="ComboBoxTextBox" TargetType="TextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="PART_ContentHost"
                                    Focusable="False"
                                    Padding="{TemplateBinding Padding}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsEditable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Background" Value="{StaticResource StandardControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource StandardControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource StandardFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource StandardFontWeight}" />
        <Setter Property="FontStretch" Value="{StaticResource StandardFontStretch}" />
        <Setter Property="FontStyle" Value="{StaticResource StandardFontStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.Resources>
                            <local:BindingProxy x:Key="MouseOverBorderColorProxy" 
                                                Data="{Binding Path=(theming:MouseOverProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="MouseOverBackgroundColorProxy" 
                                                Data="{Binding Path=(theming:MouseOverProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />

                            <local:BindingProxy x:Key="FocusedBorderColorProxy"
                                                Data="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="FocusedBackgroundColorProxy"
                                                Data="{Binding Path=(theming:ActiveProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />

                            <local:BindingProxy x:Key="DisabledBorderColorProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="DisabledBackgroundColorProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid.Resources>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{Binding Path=(theming:ControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="FocusedBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(theming:ControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="Collapsed" />
                        <ToggleButton x:Name="ToggleButton"
                                      Style="{StaticResource ComboBoxToggleButton}"
                                      theming:MouseOverProperties.BorderColor="{TemplateBinding theming:MouseOverProperties.BorderColor}"
                                      theming:PressedProperties.BorderColor="{TemplateBinding theming:PressedProperties.BorderColor}"
                                      theming:ActiveProperties.BorderColor="{TemplateBinding theming:ActiveProperties.BorderColor}"
                                      theming:DisabledProperties.BorderColor="{TemplateBinding theming:DisabledProperties.BorderColor}"
                                      HorizontalAlignment="Stretch"
                                      Focusable="False"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <!-- This Margin is required, since the Content-Presenter needs to be aligned with the
                                 TextBox. The Box itself adds these 2px automatically. -->
                            <Grid Margin="2,0,0,0">
                                <ContentPresenter x:Name="ContentSite"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  IsHitTestVisible="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Margin="{TemplateBinding Padding}"
                                     Padding="0,0,26,0"
                                     Visibility="Collapsed" />
                        </Grid>
                        <Popup x:Name="PART_Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Popup.Effect>
                                <DropShadowEffect />
                            </Popup.Effect>
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MinHeight="{TemplateBinding ActualHeight}">
                                <Border x:Name="DropDownBorder"
                                        Style="{StaticResource StandardDropDownBorderDown}">
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                    <VisualTransition To="ReadOnly" GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource DisabledBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="FocusedBorder"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource FocusedBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="FocusedBorder"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource FocusedBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="ToggleButton" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:ActiveProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ComboBox" BasedOn="{StaticResource StandardComboBox}" />



    <!--
    Subtle ComboBox.
    A ComboBox which is more subtle than the default ComboBox.
    This effect is achieved by only showing the Border at the ComboBox's bottom.
    -->
    <Style x:Key="SubtleComboBox" TargetType="ComboBox" BasedOn="{StaticResource StandardComboBox}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="0" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Padding" Value="-2,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="Transparent" />
        <Setter Property="theming:ActiveProperties.BackgroundColor" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BackgroundColor" Value="Transparent" />
    </Style>

    <!--
    Minimal ComboBox.
    Basically the same as the SubtleComboBox, but with the difference, that it shows no border at all.
    -->
    <Style x:Key="MinimalComboBox" TargetType="ComboBox" BasedOn="{StaticResource SubtleComboBox}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>



    <Style x:Key="StandardComboBoxItem" TargetType="ComboBoxItem" BasedOn="{StaticResource ForegroundSupportingThemingBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource StandardControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource StandardControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="{theming:GridUnit 4}" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource BaseHighColor}" />
        <Setter Property="theming:MouseOverProperties.BorderColor" Value="Transparent" />
        <Setter Property="theming:ActiveProperties.BackgroundColor" Value="{StaticResource Accent2MediumColor}" />
        <Setter Property="theming:ActiveProperties.BorderColor" Value="{StaticResource Accent2MediumColor}" />
        <Setter Property="theming:ActiveProperties.ForegroundBrush" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <ControlTemplate.Resources>
                        <DataTemplate DataType="{x:Type sys:String}">
                            <TextBlock Style="{DynamicResource TextBlockOverrideStyle}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.Resources>
                            <local:BindingProxy x:Key="ActiveBackgroundColorProxy"
                                                Data="{Binding Path=(theming:ActiveProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="ActiveBorderColorProxy"
                                                Data="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            
                            <local:BindingProxy x:Key="MouseOverBackgroundColorProxy"
                                                Data="{Binding Path=(theming:MouseOverProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="MouseOverBorderColorProxy"
                                                Data="{Binding Path=(theming:MouseOverProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            
                            <local:BindingProxy x:Key="DisabledBackgroundColorProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="DisabledBorderColorProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid.Resources>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Border x:Name="SelectedMark"
                                        Background="{Binding Path=(theming:ActiveProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:ColorToSolidColorBrushConverter.Default}}"
                                        BorderBrush="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:ColorToSolidColorBrushConverter.Default}}"
                                        BorderThickness="1"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch"
                                        Width="5" 
                                        Visibility="Collapsed" />
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource DisabledBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedMark"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:ActiveProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource StandardComboBoxItem}" />

</ResourceDictionary>