<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:c="http://celestial-ui.com"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:controls="clr-namespace:Celestial.UIToolkit.Controls">

    <ResourceDictionary.MergedDictionaries>
        <c:SharedResourceDictionary Source="../Shared/Theming.xaml" />
        <c:SharedResourceDictionary Source="../Shared/FocusVisuals.xaml" />
        <c:SharedResourceDictionary Source="../Shared/TemplateParts.xaml" />

        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Themes/Light.xaml" />
        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Accents/Default.xaml" />
        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Globals.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="PrimaryButton" TargetType="ButtonBase" BasedOn="{c:MergeStyles 'ControlBackground ControlBorder StandardForeground BaseFontProperties ElevationZIndex Shadow0 InteractiveShadow4'}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RectangleFocusVisual}" />
        <Setter Property="MinWidth" Value="{c:GridUnit 15}" />
        <Setter Property="MinHeight" Value="{c:GridUnit 8}" />
        <Setter Property="Padding" Value="{c:GridUnit '2,0'}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="theming:PressedProperties.BackgroundBrush" Value="{c:SelfBinding Path=(theming:MouseOverProperties.BackgroundBrush)}" />
        <Setter Property="theming:PressedProperties.BorderBrush" Value="{c:SelfBinding Path=(theming:MouseOverProperties.BorderBrush)}" />
        <Setter Property="theming:ActiveProperties.ShadowElevation" Value="0" />
        <Setter Property="controls:ThemeShadow.Shadow" Value="{StaticResource BottomControlThemeShadow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid VisualStateManager.CustomVisualStateManager="{x:Static c:ExtendedVisualStateManager.Default}">
                        <Grid.Resources>
                            <Storyboard x:Key="MouseOverStoryboard">
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{c:TemplatedParentBinding Path=(theming:MouseOverProperties.BackgroundBrush)}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{c:TemplatedParentBinding Path=(theming:MouseOverProperties.BorderBrush)}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimation Storyboard.Target="{c:TemplatedParentBinding}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:MouseOverProperties.ForegroundBrush)}" />
                                <DoubleAnimationUsingKeyFrames Storyboard.Target="{c:TemplatedParentBinding}"
                                                               Storyboard.TargetProperty="(controls:ThemeShadow.Elevation)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{c:TemplatedParentBinding Path=(theming:MouseOverProperties.ShadowElevation) }" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="PressedStoryboard">
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="Background">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{c:TemplatedParentBinding Path=(theming:PressedProperties.BackgroundBrush)}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                Storyboard.TargetProperty="BorderBrush">
                                    <c:DiscreteBrushKeyFrame KeyTime="0" Value="{c:TemplatedParentBinding Path=(theming:PressedProperties.BorderBrush)}" />
                                </c:BrushAnimationUsingKeyFrames>
                                <c:BrushAnimation Storyboard.Target="{c:TemplatedParentBinding}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:PressedProperties.ForegroundBrush)}" />
                                <DoubleAnimationUsingKeyFrames Storyboard.Target="{c:TemplatedParentBinding}"
                                                               Storyboard.TargetProperty="(controls:ThemeShadow.Elevation)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{c:TemplatedParentBinding Path=(theming:PressedProperties.ShadowElevation) }" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="DisabledStoryboard">
                                <c:BrushAnimation Storyboard.TargetName="Bd"
                                                  Storyboard.TargetProperty="Background"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:DisabledProperties.BackgroundBrush)}" />
                                <c:BrushAnimation Storyboard.TargetName="Bd"
                                                  Storyboard.TargetProperty="BorderBrush"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:DisabledProperties.BorderBrush)}" />
                                <c:BrushAnimation Storyboard.Target="{c:TemplatedParentBinding}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:DisabledProperties.ForegroundBrush)}" />
                                <DoubleAnimationUsingKeyFrames Storyboard.Target="{c:TemplatedParentBinding}"
                                                               Storyboard.TargetProperty="(controls:ThemeShadow.Elevation)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{c:TemplatedParentBinding Path=(theming:DisabledProperties.ShadowElevation) }" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Ripple"
                                                               Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="CheckedStoryboard">
                                <c:BrushAnimation Storyboard.Target="{c:TemplatedParentBinding}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:ActiveProperties.ForegroundBrush)}" />
                            </Storyboard>
                        </Grid.Resources>

                        <controls:ThemeShadowPresenter>
                            <Border x:Name="Bd"
                                    CornerRadius="{c:TemplatedParentBinding Path=(theming:ControlProperties.CornerRadius)}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}" />
                        </controls:ThemeShadowPresenter>

                        <controls:Ripple x:Name="Ripple"
                                                theming:ControlProperties.CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}"
                                                Background="{TemplateBinding theming:ActiveProperties.BackgroundBrush}"
                                                BorderBrush="{TemplateBinding theming:ActiveProperties.BorderBrush}"
                                                IsEnabled="{TemplateBinding theming:RippleProperties.ShowRippleAnimation}" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}"
                                                      GeneratedEasingFunction="{StaticResource ColorAnimationEase}" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" Storyboard="{StaticResource MouseOverStoryboard}" />
                                <VisualState x:Name="Pressed" Storyboard="{StaticResource PressedStoryboard}" />
                                <VisualState x:Name="Disabled" Storyboard="{StaticResource DisabledStoryboard}" />
                                <c:ExtendedVisualState x:Name="Checked" Storyboard="{StaticResource CheckedStoryboard}">
                                    <c:ExtendedVisualState.Conditions>
                                        <!-- The Button would stay "Selected", even if disabled without this condition. -->
                                        <Condition Property="IsEnabled" Value="True" />
                                    </c:ExtendedVisualState.Conditions>
                                </c:ExtendedVisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Ripple" Property="IsActiveTrigger" Value="True" />
                        </MultiTrigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="Ripple" Property="AllowFading" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource PrimaryButton}" />
    <Style TargetType="ToggleButton" BasedOn="{StaticResource PrimaryButton}" />
    <Style TargetType="RepeatButton" BasedOn="{StaticResource PrimaryButton}" />

    <Style x:Key="Accent1Button" 
           TargetType="ButtonBase" 
           BasedOn="{c:MergeStyles 'PrimaryButton Accent1ControlBackground Accent1ControlBorder OnDarkerAccent1Foreground'}" />
    <Style x:Key="Accent2Button" 
           TargetType="ButtonBase" 
           BasedOn="{c:MergeStyles 'PrimaryButton Accent2ControlBackground Accent2ControlBorder OnDarkerAccent2Foreground'}" />

    

    <!--
    Flat Button.
    This type of button only shows text in its default state.
    When hovered/clicked, it will behave normally though.
    -->

    <Style x:Key="PrimaryFlatButton" TargetType="ButtonBase" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="theming:MouseOverProperties.BackgroundBrush" Value="{StaticResource ControlHoverBackgroundBrush}" />
        <Setter Property="theming:PressedProperties.BackgroundBrush" Value="{StaticResource ControlPressedBackgroundBrush}" />
        <Setter Property="theming:ActiveProperties.BackgroundBrush" Value="{StaticResource ControlActiveBackgroundBrush}" />
        <Setter Property="theming:DisabledProperties.BackgroundBrush" Value="Transparent" />
    </Style>

    <Style x:Key="Accent1FlatButton" TargetType="ButtonBase" BasedOn="{StaticResource PrimaryFlatButton}">
        <Setter Property="Foreground" Value="{StaticResource Accent1Brush}" />
        <Setter Property="theming:MouseOverProperties.ForegroundBrush" Value="{StaticResource Accent1Brush}" />
        <Setter Property="theming:PressedProperties.ForegroundBrush" Value="{StaticResource Accent1Brush}" />
        <Setter Property="theming:ActiveProperties.ForegroundBrush" Value="{StaticResource Accent1Brush}" />
    </Style>

    <Style x:Key="Accent2FlatButton" TargetType="ButtonBase" BasedOn="{StaticResource PrimaryFlatButton}">
        <Setter Property="Foreground" Value="{StaticResource Accent2Brush}" />
        <Setter Property="theming:MouseOverProperties.ForegroundBrush" Value="{StaticResource Accent2Brush}" />
        <Setter Property="theming:PressedProperties.ForegroundBrush" Value="{StaticResource Accent2Brush}" />
        <Setter Property="theming:ActiveProperties.ForegroundBrush" Value="{StaticResource Accent2Brush}" />
    </Style>



    <!--
    Outlined button.
    An otherwise normal button with a border and transparent background in its default state.
    -->

    <Style x:Key="PrimaryOutlinedButton" TargetType="ButtonBase" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="theming:MouseOverProperties.BorderBrush" Value="{StaticResource ControlHoverBackgroundBrush}" />
        <Setter Property="theming:PressedProperties.BorderBrush" Value="{StaticResource ControlPressedBackgroundBrush}" />
        <Setter Property="theming:ActiveProperties.BorderBrush" Value="{StaticResource ControlActiveBackgroundBrush}" />
        <Setter Property="theming:DisabledProperties.BorderBrush" Value="{StaticResource ControlDisabledBackgroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Accent1OutlinedButton" TargetType="ButtonBase" BasedOn="{StaticResource Accent1Button}">
        <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}" />
        <Setter Property="theming:MouseOverProperties.BorderBrush" Value="{StaticResource Accent1ControlHoverBackgroundBrush}" />
        <Setter Property="theming:PressedProperties.BorderBrush" Value="{StaticResource Accent1ControlPressedBackgroundBrush}" />
        <Setter Property="theming:ActiveProperties.BorderBrush" Value="{StaticResource Accent1ControlActiveBackgroundBrush}" />
        <Setter Property="theming:DisabledProperties.BorderBrush" Value="{StaticResource ControlDisabledBackgroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="Accent2OutlinedButton" TargetType="ButtonBase" BasedOn="{StaticResource Accent2Button}">
        <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}" />
        <Setter Property="theming:MouseOverProperties.BorderBrush" Value="{StaticResource Accent2ControlHoverBackgroundBrush}" />
        <Setter Property="theming:PressedProperties.BorderBrush" Value="{StaticResource Accent2ControlPressedBackgroundBrush}" />
        <Setter Property="theming:ActiveProperties.BorderBrush" Value="{StaticResource Accent2ControlActiveBackgroundBrush}" />
        <Setter Property="theming:DisabledProperties.BorderBrush" Value="{StaticResource ControlDisabledBackgroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--
    Square Button.
    This is a type of button which always resembles a square.
    It is supposed to be used in conjunction with symbols. 
    -->

    <Style x:Key="PrimarySquareButton" TargetType="ButtonBase" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="MinWidth" Value="{c:GridUnit 8}" />
        <Setter Property="MinHeight" Value="{c:GridUnit 8}" />
        <Setter Property="Width" Value="{c:GridUnit 8}" />
        <Setter Property="Height" Value="{c:GridUnit 8}" />
        <Setter Property="theming:DisabledProperties.BackgroundBrush" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BackgroundBrush" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Accent1SquareButton" 
           TargetType="ButtonBase" 
           BasedOn="{c:MergeStyles 'PrimarySquareButton Accent1ControlBackground Accent1ControlBorder OnDarkerAccent1Foreground'}">
        <Setter Property="theming:DisabledProperties.BackgroundBrush" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BackgroundBrush" Value="Transparent" />
    </Style>

    <Style x:Key="Accent2SquareButton" 
           TargetType="ButtonBase"
           BasedOn="{c:MergeStyles 'PrimarySquareButton Accent2ControlBackground Accent2ControlBorder OnDarkerAccent2Foreground'}">
        <Setter Property="theming:DisabledProperties.BackgroundBrush" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BackgroundBrush" Value="Transparent" />        
    </Style>



    <!--
    Circle Button.
    A variation of the Square Button, which is, as expected, a circle.
    -->

    <Style x:Key="CircleButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource PrimarySquareButton}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{c:SelfBinding ActualWidth}" />
    </Style>
    <Style x:Key="PrimaryCircleButton" TargetType="ButtonBase" BasedOn="{StaticResource CircleButtonBase}" />

    <Style x:Key="Accent1CircleButton" TargetType="ButtonBase" BasedOn="{StaticResource Accent1SquareButton}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{c:SelfBinding ActualWidth}" />
    </Style>

    <Style x:Key="Accent2CircleButton" TargetType="ButtonBase" BasedOn="{StaticResource Accent2SquareButton}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{c:SelfBinding ActualWidth}" />
    </Style>



    <!--
    Hyperlink Buttons don't provide any support for Background/BorderBrush by design.
    -->
    <Style x:Key="PrimaryHyperlinkButton" TargetType="ButtonBase" BasedOn="{c:MergeStyles 'TransparentBackground TransparentBorder ControlForeground'}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource PrimaryButtonFocusVisual}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentControl x:Name="Root"
                                    Background="Transparent"
                                    VisualStateManager.CustomVisualStateManager="{x:Static c:ExtendedVisualStateManager.Default}">
                        <ContentControl.Resources>
                            <Storyboard x:Key="MouseOverStoryboard">
                                <c:BrushAnimation Storyboard.Target="{c:TemplatedParentBinding}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:MouseOverProperties.ForegroundBrush)}" />
                            </Storyboard>

                            <Storyboard x:Key="PressedStoryboard">
                                <c:BrushAnimation Storyboard.Target="{c:TemplatedParentBinding}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:PressedProperties.ForegroundBrush)}" />
                            </Storyboard>

                            <Storyboard x:Key="DisabledStoryboard">
                                <c:BrushAnimation Storyboard.Target="{c:TemplatedParentBinding}"
                                                  Storyboard.TargetProperty="Foreground"
                                                  Duration="0"
                                                  To="{c:TemplatedParentBinding Path=(theming:DisabledProperties.ForegroundBrush)}" />
                            </Storyboard>
                        </ContentControl.Resources>

                        <TextBlock x:Name="TextBlock"
                                   Foreground="{TemplateBinding Foreground}"
                                   Background="{TemplateBinding Background}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   FontStyle="{TemplateBinding FontStyle}"
                                   FontStretch="{TemplateBinding FontStretch}"
                                   Text="{TemplateBinding Content}">
                            <TextBlock.TextDecorations>
                                <TextDecoration Location="Underline">
                                    <TextDecoration.Pen>
                                        <Pen Brush="{c:TemplatedParentBinding Foreground}" />
                                    </TextDecoration.Pen>
                                </TextDecoration>
                            </TextBlock.TextDecorations>
                        </TextBlock>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}"
                                                      GeneratedEasingFunction="{StaticResource ColorAnimationEase}"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" Storyboard="{StaticResource MouseOverStoryboard}" />
                                <VisualState x:Name="Pressed" Storyboard="{StaticResource PressedStoryboard}" />
                                <VisualState x:Name="Disabled" Storyboard="{StaticResource DisabledStoryboard}" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Accent1HyperlinkButton" TargetType="ButtonBase" BasedOn="{c:MergeStyles 'PrimaryHyperlinkButton Accent1Foreground'}" />
    <Style x:Key="Accent2HyperlinkButton" TargetType="ButtonBase" BasedOn="{c:MergeStyles 'PrimaryHyperlinkButton Accent2Foreground'}" />

</ResourceDictionary>