<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Celestial.UIToolkit"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:controls="clr-namespace:Celestial.UIToolkit.Controls"
                    xmlns:converters="clr-namespace:Celestial.UIToolkit.Converters">

    <ResourceDictionary.MergedDictionaries>
        <local:SharedResourceDictionary Source="../Shared/Theming.xaml" />
        <local:SharedResourceDictionary Source="../Shared/FocusVisuals.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="StandardButtonBase" TargetType="ButtonBase" BasedOn="{theming:MultiStyle 'StandardBackground StandardBorder StandardForeground AltFontProperties'}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RectangleFocusVisual}" />
        <Setter Property="MinWidth" Value="{theming:GridUnit 15}" />
        <Setter Property="MinHeight" Value="{theming:GridUnit 8}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="theming:DisabledProperties.ForegroundBrush" Value="{StaticResource BaseHighestBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Grid.Resources>
                            <local:BindingProxy x:Key="MouseOverBackgroundColorProxy"
                                                Data="{Binding Path=(theming:MouseOverProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="DisabledBackgroundColorProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />

                            <local:BindingProxy x:Key="MouseOverBorderColorProxy"
                                                Data="{Binding Path=(theming:MouseOverProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="DisabledBorderColorProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid.Resources>
                        <Border x:Name="Bd"
                                CornerRadius="{Binding Path=(theming:ControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" />
                        <controls:RippleOverlay x:Name="Ripple"
                                                theming:ControlProperties.CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}"
                                                IsActiveTrigger="{TemplateBinding IsPressed}"
                                                AllowFading="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=True, Converter={x:Static converters:InvertBooleanConverter.Default}}"
                                                BorderBrush="{Binding Path=(theming:PressedProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:ColorToSolidColorBrushConverter.Default}}"
                                                Background="{Binding Path=(theming:PressedProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:ColorToSolidColorBrushConverter.Default}}" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource DisabledBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:PressedProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, FallbackValue=False}" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:ActiveProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource StandardButtonBase}" />
    <Style TargetType="ToggleButton" BasedOn="{StaticResource StandardButtonBase}" />
    <Style TargetType="RepeatButton" BasedOn="{StaticResource StandardButtonBase}" />

    <Style x:Key="Accent1Button" 
           TargetType="ButtonBase" 
           BasedOn="{theming:MultiStyle 'StandardButtonBase Accent1Background Accent1Border OnAccent1Foreground'}" />

    <Style x:Key="Accent2Button" 
           TargetType="ButtonBase" 
           BasedOn="{theming:MultiStyle 'StandardButtonBase Accent2Background Accent2Border OnAccent2Foreground'}" />

    
    
    <!--
    Flat Button.
    This type of button only shows text in its default state.
    When hovered/clicked, it will behave normally though.
    -->

    <Style x:Key="FlatButton" TargetType="ButtonBase" BasedOn="{StaticResource StandardButtonBase}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource BaseHighColor}" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="{StaticResource BaseMediumColor}" />
        <Setter Property="theming:ActiveProperties.BackgroundColor" Value="{StaticResource BaseMediumColor}" />
        <Setter Property="theming:DisabledProperties.BackgroundColor" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.ForegroundBrush" Value="{StaticResource DisabledForegroundBrush}" />
    </Style>

    <Style x:Key="Accent1FlatButton" TargetType="ButtonBase" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Foreground" Value="{StaticResource Accent1MediumBrush}" />
        <Setter Property="theming:MouseOverProperties.ForegroundBrush" Value="{StaticResource Accent1MediumBrush}" />
        <Setter Property="theming:PressedProperties.ForegroundBrush" Value="{StaticResource Accent1MediumBrush}" />
        <Setter Property="theming:ActiveProperties.ForegroundBrush" Value="{StaticResource Accent1MediumBrush}" />
    </Style>

    <Style x:Key="Accent2FlatButton" TargetType="ButtonBase" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Foreground" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="theming:MouseOverProperties.ForegroundBrush" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="theming:PressedProperties.ForegroundBrush" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="theming:ActiveProperties.ForegroundBrush" Value="{StaticResource Accent2MediumBrush}" />
    </Style>


    
    <!--
    Outlined button.
    An otherwise normal button with a border and transparent background in its default state.
    -->

    <Style x:Key="OutlinedButton" TargetType="ButtonBase" BasedOn="{StaticResource StandardButtonBase}">
        <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="Accent1OutlinedButton" TargetType="ButtonBase" BasedOn="{StaticResource Accent1Button}">
        <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}" />
    </Style>
    
    <Style x:Key="Accent2OutlinedButton" TargetType="ButtonBase" BasedOn="{StaticResource Accent2Button}">
        <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}" />
    </Style>
    
    
    
    <!--
    Square Button.
    This is a type of button which always resembles a square.
    It is supposed to be used in conjunction with symbols. 
    -->

    <Style x:Key="SquareButton" TargetType="ButtonBase" BasedOn="{StaticResource StandardButtonBase}">
        <Setter Property="MinWidth" Value="{theming:GridUnit 8}" />
        <Setter Property="MinHeight" Value="{theming:GridUnit 8}" />
        <Setter Property="Width" Value="{theming:GridUnit 8}" />
        <Setter Property="Height" Value="{theming:GridUnit 8}" />
        <Setter Property="theming:DisabledProperties.BackgroundColor" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BorderColor" Value="{StaticResource BaseHighColor}" />
        <Setter Property="theming:DisabledProperties.ForegroundBrush" Value="{StaticResource DisabledForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderThickness" Value="{StaticResource SlimBorderThickness}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Accent1SquareButton" 
           TargetType="ButtonBase" 
           BasedOn="{theming:MultiStyle 'SquareButton Accent1Border Accent1Background OnAccent1Foreground'}" />

    <Style x:Key="Accent2SquareButton" 
           TargetType="ButtonBase"
           BasedOn="{theming:MultiStyle 'SquareButton Accent2Border Accent2Background OnAccent2Foreground'}" />



    <!--
    Circle Button.
    A variation of the Square Button, which is, as expected, a circle.
    -->

    <Style x:Key="CircleButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource SquareButton}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="CircleButton" TargetType="ButtonBase" BasedOn="{StaticResource CircleButtonBase}" />

    <Style x:Key="Accent1CircleButton" TargetType="ButtonBase" BasedOn="{StaticResource Accent1SquareButton}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
    </Style>

    <Style x:Key="Accent2CircleButton" TargetType="ButtonBase" BasedOn="{StaticResource Accent2SquareButton}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
    </Style>



    <!--
    Hyperlink Button.
    This is exactly what it sounds like.
    -->

    <Style x:Key="HyperlinkButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource StandardButtonFocusVisual}" />
        <Setter Property="Foreground" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource StandardFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource StandardFontWeight}" />
        <Setter Property="FontStretch" Value="{StaticResource StandardFontStretch}" />
        <Setter Property="FontStyle" Value="{StaticResource StandardFontStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Foreground="{TemplateBinding Foreground}"
                               Background="{TemplateBinding Background}"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               FontWeight="{TemplateBinding FontWeight}"
                               FontStyle="{TemplateBinding FontStyle}"
                               FontStretch="{TemplateBinding FontStretch}"
                               TextDecorations="Underline"
                               Text="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Accent2HighBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Accent2LowBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>