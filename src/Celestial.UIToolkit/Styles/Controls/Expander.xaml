<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="http://celestial-ui.com"
                    xmlns:controls="clr-namespace:Celestial.UIToolkit.Controls">

    <ResourceDictionary.MergedDictionaries>
        <c:SharedResourceDictionary Source="../Shared/FocusVisuals.xaml" />
        <c:SharedResourceDictionary Source="../Shared/Theming.xaml" />
        <c:SharedResourceDictionary Source="../Shared/TemplateParts.xaml" />
        <c:SharedResourceDictionary Source="../../Icons/Arrows.xaml" />

        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Themes/Light.xaml" />
        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Accents/Default.xaml" />
        <c:DesignTimeOnlyResourceDictionary Source="../Theming/Globals.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="StandardExpander" TargetType="Expander" BasedOn="{c:MultiStyle 'TransparentBackground TransparentBorder StandardForeground'}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RectangleFocusVisual}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Style="{DynamicResource TitleTextBlock}"
                               Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <ControlTemplate.Resources>
                        <c:MathOperationConverter x:Key="MultiplyConverter" Operator="Multiply" />
                    </ControlTemplate.Resources>
                    <DockPanel>
                        <DockPanel x:Name="HeaderContainer"
                                   DockPanel.Dock="Top"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Margin="{c:GridUnit '0,0,0,1'}">
                            <ToggleButton x:Name="VisibleToggleButton"
                                          DockPanel.Dock="Right"
                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Style="{DynamicResource InvisibleRippleButton}"
                                          Padding="{c:GridUnit '3,1'}">
                                <Border RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <RotateTransform x:Name="IsExpandedRotateTransform" Angle="180" />
                                    </Border.RenderTransform>
                                    <Border RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <RotateTransform x:Name="ExpandDirectionRotateTransform" Angle="0" />
                                        </Border.RenderTransform>
                                        <controls:PathIcon Data="{StaticResource HalfArrowDown}"
                                                           Width="{c:GridUnit 5}"
                                                           Height="{c:GridUnit 5}" />
                                    </Border>
                                </Border>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Style="{StaticResource InvisibleButton}"
                                          Focusable="False"
                                          IsTabStop="False">
                                <ContentPresenter x:Name="HeaderContentSite"
                                                  ContentSource="Header"
                                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                  RenderTransformOrigin="0.5,0.5">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform x:Name="HeaderContentSiteRotateTransform" Angle="0" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </ToggleButton>
                        </DockPanel>
                        <StackPanel x:Name="ContentContainer">
                            <StackPanel.Width>
                                <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                    <Binding Path="Opacity" ElementName="ContentSite" />
                                    <Binding Path="ActualWidth" ElementName="ContentSite" />
                                </MultiBinding>
                            </StackPanel.Width>
                            <StackPanel.Height>
                                <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                    <Binding Path="Opacity" ElementName="ContentSite" />
                                    <Binding Path="ActualHeight" ElementName="ContentSite" />
                                </MultiBinding>
                            </StackPanel.Height>
                            <ContentPresenter x:Name="ContentSite"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                        </StackPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentSite"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="{StaticResource EnterAnimationKeyTime}" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IsExpandedRotateTransform"
                                                                       Storyboard.TargetProperty="Angle">
                                            <LinearDoubleKeyFrame KeyTime="{StaticResource EnterAnimationKeyTime}" Value="180" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentSite"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="{StaticResource ExitAnimationKeyTime}" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IsExpandedRotateTransform"
                                                                       Storyboard.TargetProperty="Angle">
                                            <LinearDoubleKeyFrame KeyTime="{StaticResource ExitAnimationKeyTime}" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="{StaticResource ExitAnimationKeyTime}" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualState x:Name="ExpandDown" />
                                <VisualState x:Name="ExpandUp">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContainer"
                                                                       Storyboard.TargetProperty="(DockPanel.Dock)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Dock.Bottom}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandDirectionRotateTransform"
                                                                       Storyboard.TargetProperty="Angle">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="180" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContainer"
                                                                       Storyboard.TargetProperty="(DockPanel.Dock)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Dock.Left}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandDirectionRotateTransform"
                                                                       Storyboard.TargetProperty="Angle">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentSiteRotateTransform"
                                                                       Storyboard.TargetProperty="Angle">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="270" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContainer"
                                                                       Storyboard.TargetProperty="(DockPanel.Dock)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Dock.Right}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandDirectionRotateTransform"
                                                                       Storyboard.TargetProperty="Angle">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="270" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentSiteRotateTransform"
                                                                       Storyboard.TargetProperty="Angle">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="90" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter TargetName="ContentContainer" Property="Width" Value="Auto" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ContentContainer" Property="Width" Value="Auto" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ContentContainer" Property="Height" Value="Auto" />
                            <Setter TargetName="ContentContainer" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="ContentContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="VisibleToggleButton" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="VisibleToggleButton" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="HeaderContentSite" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="VisibleToggleButton" Property="Padding" Value="{c:GridUnit '1,3', TargetType=Thickness}" />
                            <Setter TargetName="HeaderContainer" Property="Margin" Value="{c:GridUnit '0,0,1,0', TargetType=Thickness}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ContentContainer" Property="Height" Value="Auto" />
                            <Setter TargetName="ContentContainer" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="ContentContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="VisibleToggleButton" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="VisibleToggleButton" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="VisibleToggleButton" Property="Padding" Value="{c:GridUnit '1,3', TargetType=Thickness}" />
                            <Setter TargetName="HeaderContainer" Property="Margin" Value="{c:GridUnit '1,0,0,0', TargetType=Thickness}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource StandardExpander}" />

</ResourceDictionary>