<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Celestial.UIToolkit"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:converters="clr-namespace:Celestial.UIToolkit.Converters">

    <ResourceDictionary.MergedDictionaries>
        <local:SharedResourceDictionary Source="../Shared/Theming.xaml" />
        <local:SharedResourceDictionary Source="../../Icons/Arrows.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="StandardExpander" TargetType="Expander" BasedOn="{StaticResource Accent2BorderThemingBase}">
        <Style.Resources>
            <Style x:Key="ExpanderToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource Accent2BorderThemingBase}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{StaticResource StandardControlBorderBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="Transparent" />
                <Setter Property="theming:PressedProperties.BackgroundColor" Value="Transparent" />
                <Setter Property="theming:ActiveProperties.BackgroundColor" Value="Transparent" />
                <Setter Property="theming:DisabledProperties.BackgroundColor" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Bd"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}">
                                <Border.Resources>
                                    <local:BindingProxy x:Key="ActiveBackgroundColorProxy"
                                                        Data="{Binding Path=(theming:ActiveProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="ActiveBorderColorProxy"
                                                        Data="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />

                                    <local:BindingProxy x:Key="MouseOverBackgroundColorProxy"
                                                        Data="{Binding Path=(theming:MouseOverProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="MouseOverBorderColorProxy"
                                                        Data="{Binding Path=(theming:MouseOverProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />

                                    <local:BindingProxy x:Key="PressedBackgroundColorProxy"
                                                        Data="{Binding Path=(theming:PressedProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="PressedBorderColorProxy"
                                                        Data="{Binding Path=(theming:PressedProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />

                                    <local:BindingProxy x:Key="DisabledBackgroundColorProxy"
                                                        Data="{Binding Path=(theming:DisabledProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="DisabledBorderColorProxy"
                                                        Data="{Binding Path=(theming:DisabledProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border.Resources>
                                <Grid x:Name="ArrowContainer">
                                    <Path x:Name="Arrow"
                                          Data="{StaticResource HalfArrowDown}"
                                          Stroke="{TemplateBinding BorderBrush}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Path x:Name="ArrowChecked"
                                          Data="{StaticResource HalfArrowDown}"
                                          Stroke="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:ColorToSolidColorBrushConverter.Default}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Collapsed"/>
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                            <VisualTransition To="Disabled" GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBackgroundColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ArrowChecked"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource PressedBackgroundColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource PressedBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource PressedBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ArrowChecked"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource PressedBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBackgroundColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ArrowChecked"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowChecked"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}}" Value="Left">
                                    <Setter TargetName="ArrowContainer" Property="DockPanel.Dock" Value="Top" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander}}" Value="Right">
                                    <Setter TargetName="ArrowContainer" Property="DockPanel.Dock" Value="Top" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource StandardFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource StandardFontWeight}" />
        <Setter Property="FontStretch" Value="{StaticResource StandardFontStretch}" />
        <Setter Property="FontStyle" Value="{StaticResource StandardFontStyle}" />
        <Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <DockPanel>
                            <Grid x:Name="HeaderPanel"
                                  DockPanel.Dock="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="HeaderRow0" />
                                    <RowDefinition x:Name="HeaderRow1" Height="0" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="HeaderCol0" Width="20" />
                                    <ColumnDefinition x:Name="HeaderCol1" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="HeaderContentSite"
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                  RecognizesAccessKey="True" />
                                <ToggleButton x:Name="ToggleButton"
                                              Grid.ColumnSpan="2"
                                              HorizontalContentAlignment="Stretch"
                                              VerticalContentAlignment="Center"
                                              Style="{StaticResource ExpanderToggleButton}"
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <ToggleButton.LayoutTransform>
                                        <RotateTransform x:Name="ToggleButtonRotateTransform"
                                                         CenterX="0.5"
                                                         CenterY="0.5"
                                                         Angle="0" />
                                    </ToggleButton.LayoutTransform>
                                </ToggleButton>
                            </Grid>
                            <Border x:Name="ContentSite">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Border.LayoutTransform>
                                    <ScaleTransform x:Name="ContentSiteScaleTransform" 
                                                    ScaleX="1" ScaleY="0" />
                                </Border.LayoutTransform>
                            </Border>
                        </DockPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentSiteScaleTransform"
                                                                       Storyboard.TargetProperty="ScaleY">
                                            <SplineDoubleKeyFrame KeyTime="{StaticResource InnerPartialAnimationKeyTime}"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonRotateTransform"
                                                                       Storyboard.TargetProperty="Angle">
                                            <LinearDoubleKeyFrame KeyTime="{StaticResource InnerPartialAnimationKeyTime}"
                                                                  Value="90" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentSiteScaleTransform"
                                                                       Storyboard.TargetProperty="ScaleY">
                                            <LinearDoubleKeyFrame KeyTime="{StaticResource InnerPartialAnimationKeyTime}" 
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="ToggleButton" Property="HorizontalContentAlignment" Value="Center" />
                            <Setter TargetName="ToggleButton" Property="VerticalContentAlignment" Value="Top" />
                            <Setter TargetName="HeaderCol0" Property="Width" Value="*" />
                            <Setter TargetName="HeaderCol1" Property="Width" Value="0" />
                            <Setter TargetName="HeaderRow0" Property="Height" Value="10" />
                            <Setter TargetName="HeaderRow1" Property="Height" Value="*" />
                            <Setter TargetName="ToggleButton" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="HeaderContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="HeaderContentSite" Property="Grid.Column" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="ToggleButton" Property="HorizontalContentAlignment" Value="Center" />
                            <Setter TargetName="ToggleButton" Property="VerticalContentAlignment" Value="Top" />
                            <Setter TargetName="HeaderCol0" Property="Width" Value="*" />
                            <Setter TargetName="HeaderCol1" Property="Width" Value="0" />
                            <Setter TargetName="HeaderRow0" Property="Height" Value="10" />
                            <Setter TargetName="HeaderRow1" Property="Height" Value="*" />
                            <Setter TargetName="ToggleButton" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="HeaderContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="HeaderContentSite" Property="Grid.Column" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:ActiveProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource StandardExpander}" />

</ResourceDictionary>