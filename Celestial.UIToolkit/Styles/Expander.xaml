<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Celestial.UIToolkit"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:converters="clr-namespace:Celestial.UIToolkit.Converters">

    <ResourceDictionary.MergedDictionaries>
        <local:SharedResourceDictionary Source="Theming.xaml" />
        <local:SharedResourceDictionary Source="../Icons/Arrows.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="StandardExpander" TargetType="Expander" BasedOn="{StaticResource DefaultThemingBase}">
        <Style.Resources>
            <Style x:Key="ExpanderToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource DefaultThemingBase}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{StaticResource StandardControlBorderBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="Transparent" />
                <Setter Property="theming:PressedProperties.BackgroundColor" Value="Transparent" />
                <Setter Property="theming:ActiveProperties.BackgroundColor" Value="Transparent" />
                <Setter Property="theming:DisabledProperties.BackgroundColor" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Bd"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding theming:ControlProperties.CornerRadius}">
                                <Border.Resources>
                                    <local:BindingProxy x:Key="ActiveBackgroundColorProxy"
                                                        Data="{Binding Path=(theming:ActiveProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="ActiveBorderColorProxy"
                                                        Data="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />

                                    <local:BindingProxy x:Key="MouseOverBackgroundColorProxy"
                                                        Data="{Binding Path=(theming:MouseOverProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="MouseOverBorderColorProxy"
                                                        Data="{Binding Path=(theming:MouseOverProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />

                                    <local:BindingProxy x:Key="PressedBackgroundColorProxy"
                                                        Data="{Binding Path=(theming:PressedProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="PressedBorderColorProxy"
                                                        Data="{Binding Path=(theming:PressedProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />

                                    <local:BindingProxy x:Key="DisabledBackgroundColorProxy"
                                                        Data="{Binding Path=(theming:DisabledProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    <local:BindingProxy x:Key="DisabledBorderColorProxy"
                                                        Data="{Binding Path=(theming:DisabledProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border.Resources>
                                <Grid>
                                    <Path x:Name="Arrow"
                                          Data="{StaticResource HalfArrowDown}"
                                          Stroke="{TemplateBinding BorderBrush}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" />
                                    <Path x:Name="ArrowChecked"
                                          Data="{StaticResource HalfArrowDown}"
                                          Stroke="{Binding Path=(theming:ActiveProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:ColorToSolidColorBrushConverter.Default}}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Visibility="Collapsed"/>
                                </Grid>                                
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                            <VisualTransition To="Disabled" GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBackgroundColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ArrowChecked"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource PressedBackgroundColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource PressedBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource PressedBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ArrowChecked"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource PressedBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="Background.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBackgroundColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                              Storyboard.TargetProperty="BorderBrush.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ArrowChecked"
                                                                              Storyboard.TargetProperty="Stroke.Color">
                                                    <DiscreteColorKeyFrame Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowChecked"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <ToggleButton Style="{StaticResource ExpanderToggleButton}"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource StandardExpander}" />

</ResourceDictionary>