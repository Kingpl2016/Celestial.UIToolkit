<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Celestial.UIToolkit"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <local:SharedResourceDictionary Source="Theming.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="StandardCheckBox" TargetType="CheckBox" BasedOn="{StaticResource ForegroundSupportingThemingBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RectangleFocusVisual}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource StandardFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource StandardFontWeight}" />
        <Setter Property="FontStretch" Value="{StaticResource StandardFontStretch}" />
        <Setter Property="FontStyle" Value="{StaticResource StandardFontStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource BaseHighestBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseLowerBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ControlTemplate.Resources>
                        <DataTemplate DataType="{x:Type sys:String}">
                            <TextBlock Style="{DynamicResource TextBlockOverrideStyle}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <BulletDecorator SnapsToDevicePixels="False">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="Width" Value="20" />
                                        <Setter Property="Height" Value="20" />
                                        <Setter Property="CornerRadius" Value="{Binding Path=(theming:ControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Property="SnapsToDevicePixels" Value="False" />
                                    </Style>
                                </Grid.Resources>
                                <Border x:Name="Bd"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding Path=(theming:ControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                                <!-- Because the VisualStateManager has trouble animating the same properties
                                     for two different State-Groups (e.g. DefaultState/CheckState), 
                                     we shadow the default border with others.
                                     This way, we can animate each State-Group separately, even though
                                     the code grows a lot larger. -->
                                <Border x:Name="CheckedBorder"
                                        Visibility="Collapsed"
                                        BorderBrush="{StaticResource Accent2MediumBrush}" />
                                <Border x:Name="DisabledBorder"
                                        Visibility="Collapsed"
                                        BorderBrush="{StaticResource BaseHighBrush}" />
                                <Path x:Name="Checkmark"
                                      Visibility="Collapsed"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Width="14" 
                                      Height="14"
                                      Stroke="{StaticResource Accent2MediumBrush}"
                                      StrokeThickness="2"
                                      Data="M 1,7 L 7,13 L 13,2" />
                                <Rectangle x:Name="IndeterminateMark"
                                           Visibility="Collapsed"
                                           Fill="{StaticResource Accent2MediumBrush}"
                                           Margin="3" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                    <VisualTransition GeneratedDuration="0" To="Disabled" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Accent2HighColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Accent2HighColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Checkmark"
                                                                      Storyboard.TargetProperty="Stroke.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Accent2HighColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateMark"
                                                                      Storyboard.TargetProperty="Fill.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Accent2HighColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Accent2LowColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Accent2LowColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Checkmark"
                                                                      Storyboard.TargetProperty="Stroke.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Accent2LowColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateMark"
                                                                      Storyboard.TargetProperty="Fill.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Accent2LowColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Checkmark"
                                                                      Storyboard.TargetProperty="Stroke.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BaseHighColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateMark"
                                                                      Storyboard.TargetProperty="Fill.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BaseHighColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                            <!-- This could probably be done with triggers too (shorter?).
                                 MSDN does it like this though, so if we embrace the VSM, this is prob. cleaner. -->
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Checkmark"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateMark"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:PressedProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="CheckBox" BasedOn="{StaticResource StandardCheckBox}" />

</ResourceDictionary>