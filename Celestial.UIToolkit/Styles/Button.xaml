<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Celestial.UIToolkit"
                    xmlns:theming="clr-namespace:Celestial.UIToolkit.Theming">

    <ResourceDictionary.MergedDictionaries>
        <local:SharedResourceDictionary Source="Theming.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="StandardButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource ForegroundSupportingThemingBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RectangleFocusVisual}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource StandardFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource StandardFontWeight}" />
        <Setter Property="FontStretch" Value="{StaticResource StandardFontStretch}" />
        <Setter Property="FontStyle" Value="{StaticResource StandardFontStyle}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource StandardForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource BaseMediumBrush}" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource BaseHighColor}" />
        <Setter Property="theming:MouseOverProperties.BorderColor" Value="Transparent" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="{StaticResource BaseLowColor}" />
        <Setter Property="theming:PressedProperties.BorderColor" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BackgroundColor" Value="{StaticResource BaseHigherColor}" />
        <Setter Property="theming:DisabledProperties.BorderColor" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <DataTemplate DataType="{x:Type sys:String}">
                            <TextBlock Style="{DynamicResource TextBlockOverrideStyle}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>

                    <Border x:Name="Bd"
                            CornerRadius="{Binding Path=(theming:ControlProperties.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <Border.Resources>
                            <!-- Important: We need to use/define these binding-proxys, because otherwise, 
                                 there would be absolutely no way to bind the animations to the attached properties. -->
                            <local:BindingProxy x:Key="MouseOverBackgroundColorProxy"
                                                Data="{Binding Path=(theming:MouseOverProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="PressedBackgroundColorProxy"
                                                Data="{Binding Path=(theming:PressedProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="DisabledBackgroundColorProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BackgroundColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            
                            <local:BindingProxy x:Key="MouseOverBorderColorProxy"
                                                Data="{Binding Path=(theming:MouseOverProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="PressedBorderColorProxy"
                                                Data="{Binding Path=(theming:PressedProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                            <local:BindingProxy x:Key="DisabledBorderColorProxy"
                                                Data="{Binding Path=(theming:DisabledProperties.BorderColor), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border.Resources>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="{StaticResource ColorAnimationDuration}" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource MouseOverBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource PressedBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource PressedBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="Background.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource DisabledBackgroundColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                      Storyboard.TargetProperty="BorderBrush.Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{Binding Data, Source={StaticResource DisabledBorderColorProxy}}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:MouseOverProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(theming:PressedProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(theming:DisabledProperties.ForegroundBrush), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource StandardButtonBase}" />

    <Style x:Key="Accent1Button" TargetType="Button" BasedOn="{StaticResource StandardButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource AccentForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource Accent1MediumBrush}" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource Accent1HighColor}" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="{StaticResource Accent1LowColor}" />
    </Style>
    
    <Style x:Key="Accent2Button" TargetType="Button" BasedOn="{StaticResource StandardButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource AccentForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource Accent2HighColor}" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="{StaticResource Accent2LowColor}" />
    </Style>


    
    <!--
    Ghost Button.
    This is a type of button, which only displays a little border, not a gigantic square.
    -->

    <Style x:Key="GhostButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource StandardButtonBase}">
        <Setter Property="BorderBrush" Value="{StaticResource BaseMediumBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="Transparent" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BackgroundColor" Value="Transparent" />
        <Setter Property="theming:MouseOverProperties.BorderColor" Value="{StaticResource BaseHighColor}" />
        <Setter Property="theming:PressedProperties.BorderColor" Value="{StaticResource BaseLowColor}" />
        <Setter Property="theming:DisabledProperties.BorderColor" Value="{StaticResource BaseHighColor}" />
    </Style>
    <Style x:Key="GhostButton" TargetType="Button" BasedOn="{StaticResource GhostButtonBase}" />

    <Style x:Key="Accent1GhostButton" TargetType="Button" BasedOn="{StaticResource GhostButton}">
        <Setter Property="BorderBrush" Value="{StaticResource Accent1MediumBrush}" />
        <Setter Property="theming:MouseOverProperties.BorderColor" Value="{StaticResource Accent1HighColor}" />
        <Setter Property="theming:PressedProperties.BorderColor" Value="{StaticResource Accent1LowColor}" />
    </Style>
    
    <Style x:Key="Accent2GhostButton" TargetType="Button" BasedOn="{StaticResource GhostButton}">
        <Setter Property="BorderBrush" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="theming:MouseOverProperties.BorderColor" Value="{StaticResource Accent2HighColor}" />
        <Setter Property="theming:PressedProperties.BorderColor" Value="{StaticResource Accent2LowColor}" />
    </Style>
    


    <!--
    Minimal Button.
    This is a type of button, which only displays its content when not being interacted with.
    To indicate that this button can be interacted with, its FontWeight is bold, in comparison
    to the other buttons.
    -->

    <Style x:Key="MinimalButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource StandardButtonBase}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="theming:DisabledProperties.BackgroundColor" Value="Transparent" />
    </Style>
    <Style x:Key="MinimalButton" TargetType="Button" BasedOn="{StaticResource MinimalButtonBase}" />

    <Style x:Key="Accent1MinimalButton" TargetType="Button" BasedOn="{StaticResource MinimalButton}">
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource Accent1HighColor}" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="{StaticResource Accent1LowColor}" />
        <Setter Property="theming:MouseOverProperties.ForegroundBrush" Value="{StaticResource AccentForegroundBrush}" />
        <Setter Property="theming:PressedProperties.ForegroundBrush" Value="{StaticResource AccentForegroundBrush}" />
    </Style>
    
    <Style x:Key="Accent2MinimalButton" TargetType="Button" BasedOn="{StaticResource MinimalButton}">
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource Accent2HighColor}" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="{StaticResource Accent2LowColor}" />
        <Setter Property="theming:MouseOverProperties.ForegroundBrush" Value="{StaticResource AccentForegroundBrush}" />
        <Setter Property="theming:PressedProperties.ForegroundBrush" Value="{StaticResource AccentForegroundBrush}" />
    </Style>
    
    
    
    <!--
    Square Button.
    This is a type of button which always resembles a square.
    It is supposed to be used in conjunction with symbols. 
    -->

    <Style x:Key="SquareButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource StandardButtonBase}">
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="theming:DisabledProperties.BackgroundColor" Value="Transparent" />
        <Setter Property="theming:DisabledProperties.BorderColor" Value="{StaticResource BaseHighColor}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SquareButton" TargetType="Button" BasedOn="{StaticResource SquareButtonBase}" />

    <Style x:Key="Accent1SquareButton" TargetType="Button" BasedOn="{StaticResource SquareButton}">
        <Setter Property="Foreground" Value="{StaticResource AccentForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource Accent1MediumBrush}" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource Accent1HighColor}" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="{StaticResource Accent1LowColor}" />
    </Style>

    <Style x:Key="Accent2SquareButton" TargetType="Button" BasedOn="{StaticResource SquareButton}">
        <Setter Property="Foreground" Value="{StaticResource AccentForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="theming:MouseOverProperties.BackgroundColor" Value="{StaticResource Accent2HighColor}" />
        <Setter Property="theming:PressedProperties.BackgroundColor" Value="{StaticResource Accent2LowColor}" />
    </Style>    



    <!--
    Circle Button.
    A variation of the Square Button, which is, as expected, a circle.
    -->

    <Style x:Key="CircleButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource SquareButtonBase}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="CircleButton" TargetType="Button" BasedOn="{StaticResource CircleButtonBase}" />

    <Style x:Key="Accent1CircleButton" TargetType="Button" BasedOn="{StaticResource Accent1SquareButton}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
    </Style>
    
    <Style x:Key="Accent2CircleButton" TargetType="Button" BasedOn="{StaticResource Accent2SquareButton}">
        <Setter Property="theming:ControlProperties.CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
    </Style>
    


    <!--
    Hyperlink Button.
    This is exactly what it sounds like.
    -->

    <Style x:Key="HyperlinkButton" TargetType="ButtonBase">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource StandardButtonFocusVisual}" />
        <Setter Property="Foreground" Value="{StaticResource Accent2MediumBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource StandardFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource StandardFontWeight}" />
        <Setter Property="FontStretch" Value="{StaticResource StandardFontStretch}" />
        <Setter Property="FontStyle" Value="{StaticResource StandardFontStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Foreground="{TemplateBinding Foreground}"
                               Background="{TemplateBinding Background}"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               FontWeight="{TemplateBinding FontWeight}"
                               FontStyle="{TemplateBinding FontStyle}"
                               FontStretch="{TemplateBinding FontStretch}"
                               TextDecorations="Underline"
                               Text="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Accent2HighBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Accent2LowBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>